{"version":3,"sources":["ron-mode/fonts/AmazDooMLeft.ttf","ron-mode/fonts/AmazDooMRight.ttf","ron-mode/doom-guy.jsx","ron-mode/svg-assets.jsx","ron-mode/topbar.jsx","ron-mode/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","IDLE_ANIMATION","frameX","DoomGuy","pos","left","step","state","idleIndex","frameY","startIdle","_this","stopIdle","console","log","_cancel","requestInterval","onAnimate","props","speed","setBgRef","ref","bgRef","setContainerRef","containerRef","fn","delay","instance","start","Date","getTime","requestAnimationFrame","loop","call","cancelAnimationFrame","setState","idleObj","length","Object","objectSpread","getFrameStyle","_this$state","x","cellWidth","y","cellHeight","_this$specialDoomSpri","specialDoomSpriteMagic","_this$specialDoomSpri2","slicedToArray","xPlus","backgroundPosition","concat","backgroundSize","scale","size","this","changeMode","nextProps","mode","style","width","height","react_default","a","createElement","className","Component","defaultProps","SvgAssets","xmlns","xmlnsXlink","position","viewBox","id","d","Topbar","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","onUrlChange","e","value","target","url","loadSpec","specActions","updateUrl","download","onUrlSelect","href","setSelectedUrl","preventDefault","downloadUrl","selectedUrl","urls","getConfigs","forEach","spec","i","selectedIndex","onFilterChange","layoutActions","updateFilter","specSelectors","_this2","configs","targetIndex","primaryName","name","_this$props","getComponent","Button","Link","isLoading","loadingStatus","inputStyle","color","control","formOnSubmit","rows","link","push","key","htmlFor","disabled","onChange","type","onClick","onSubmit","map","el","cloneElement","React","RonModeComponent","exitRonMode","setTimeout","ronModeActions","setEnabled","ronModeSelectors","enabled","getEnabled","svg_assets","ui","SwaggerUI","plugins","SwaggerUIStandalone","initialState","ronMode","statePlugins","wrapActions","ori","system","editor","onLoad","obj","setTheme","actions","payload","arguments","undefined","selectors","get","reducers","defineProperty","action","set","components","RonMode","DoomGuyComponent","TopbarRonMode","TopBarComponent","wrapComponents","Ori","BaseLayout","ronModeEnabled","layout","window","Mousetrap","bind","App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6NAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sSCIjCC,UAAiB,CACtB,CAACC,OAAQ,GADa,GAKtB,CAACA,OAAQ,GACT,CAACA,OAAQ,GANa,GAUtB,CAACA,OAAQ,GACT,CAACA,OAAQ,KAGUC,6MAEnBC,IAAM,CACJC,KAAM,EACNC,KAAM,KAYRC,MAAQ,CACNC,UAAW,EACXN,OAAQ,EACRO,OAAQ,KAGVC,UAAY,WACVC,EAAKC,WACLC,QAAQC,IAAI,sBACZH,EAAKI,QAAUJ,EAAKK,gBAAgBL,EAAKM,UAAWN,EAAKO,MAAMC,UAGjEP,SAAW,WACND,EAAKI,UACNF,QAAQC,IAAI,qBACZH,EAAKI,UACLJ,EAAKI,QAAU,SA4BnBK,SAAW,SAAAC,GAAG,OAAIV,EAAKW,MAAQD,KAE/BE,gBAAkB,SAAAF,GAAG,OAAIV,EAAKa,aAAeH,KAE7CL,gBAAkB,SAAUS,EAAIC,GAC9B,IACIC,EADAC,GAAQ,IAAIC,MAAOC,UAevB,OAHAH,EAAWI,sBAVE,SAAPC,IACJL,EAAWI,sBAAsBC,IACnB,IAAIH,MAAOC,UACHF,GACTF,IACXD,EAAGQ,OACHL,GAAQ,IAAIC,MAAOC,aAOhB,WACLI,qBAAqBP,OAIzBV,UAAY,WACVN,EAAKwB,SAAS,SAAA5B,GACZ,IAAM6B,EAAUnC,EAAeM,EAAMC,WAC/BA,GAAaD,EAAMC,UAAY,GAAMP,EAAeoC,OAE1D,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFF,EADL,CAEE5B,mBAKNgC,cAAgB,WAAM,IAAAC,EACO9B,EAAKJ,MAAxBL,EADYuC,EACZvC,OAAQO,EADIgC,EACJhC,OACZiC,EAAUxC,EAASS,EAAKgC,aAAnB,EACLC,EAAUnC,EAASE,EAAKkC,cAAnB,EAHWC,EAKGnC,EAAKoC,uBAAuB7C,EAAQO,GALvCuC,EAAAV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,GAKbI,EALaF,EAAA,GAUpB,OAFAJ,GARoBI,EAAA,GAUb,CACL1B,MAAO,CACL6B,mBAAkB,GAAAC,OALtBV,GAAKQ,EAKiB,OAAAE,OAAYR,EAAZ,MAClBS,eAAgB1C,EAAKO,MAAMoC,MAAQ3C,EAAKO,MAAMqC,UA8BpDZ,UAAY,kBAAMhC,EAAKO,MAAMyB,UAAYhC,EAAKO,MAAMoC,SACpDT,WAAa,kBAAMlC,EAAKO,MAAM2B,WAAalC,EAAKO,MAAMoC,0FAxGpDE,KAAKC,WAAWD,KAAKtC,qDAIrBsC,KAAK5C,6DAGmB8C,GACrBA,EAAUC,MAAQH,KAAKtC,MAAMyC,MAC9BH,KAAKC,WAAWC,sCAITxC,GACQ,QAAdA,EAAMyC,KACPH,KAAK9C,YACkB,OAAdQ,EAAMyC,KACfH,KAAKrB,SAAS,CAAEjC,OAAQ,EAAGO,OAAQ,IACZ,QAAdS,EAAMyC,MACfH,KAAKrB,SAAS,CAAEjC,OAAQ,EAAGO,OAAQ,mDA2DhBP,EAAQO,GAC7B,IAAIiC,EAAI,EACJE,EAAI,EAoBR,OAlBa,GAAV1C,IACDwC,GAAK,EAAIc,KAAKtC,MAAMoC,MACpBV,EAAI,EAAIY,KAAKtC,MAAMoC,MAChB7C,GAAU,IACXiC,GAAK,GAAKc,KAAKtC,MAAMoC,MACrBV,GAAK,EAAIY,KAAKtC,MAAMoC,QAIrBpD,GAAU,IACXwC,GAAK,GAAKc,KAAKtC,MAAMoC,MACrBV,EAAI,EAAIY,KAAKtC,MAAMoC,MAChB7C,GAAU,IACXiC,GAAK,GAAKc,KAAKtC,MAAMoC,MACrBV,GAAK,EAAIY,KAAKtC,MAAMoC,QAIjB,CAACZ,EAAEE,oCAOV,IAAMgB,EAAQ,CACZC,MAAOL,KAAKb,YACZmB,OAAQN,KAAKX,cAGPvB,EAAUkC,KAAKhB,gBAAflB,MAER,OACEyC,EAAAC,EAAAC,cAAA,OAAK5C,IAAKmC,KAAKjC,gBAAiB2C,UAAU,WAAWN,MAAOA,GAC1DG,EAAAC,EAAAC,cAAA,OAAK5C,IAAKmC,KAAKpC,SAAUwC,MAAOtC,EAAO4C,UAAU,4BAzJpBC,aAAhBhE,EAOZiE,aAAe,CACpBzB,UAAW,IACXE,WAAY,IACZS,MAAO,GACPC,KAAM,IACNI,KAAM,OACNxC,MAAO,KC9BX,IAyCekD,EAzCG,kBAChBN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,MAAM,6BAA6BC,WAAW,+BAA+BX,MAAO,CACrFY,SAAU,WACVX,MAAO,EACPC,OAAQ,IAEVC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,YAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,gxCAGVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,UAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,2rBAGVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,SAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,kVAGVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,eAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,wLAGVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,oBAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,qLAIVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,WAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,iEAGVZ,EAAAC,EAAAC,cAAA,UAAQQ,QAAQ,YAAYC,GAAG,UAC7BX,EAAAC,EAAAC,cAAA,QAAMU,EAAE,wDChCGC,cAMnB,SAAAA,EAAY1D,EAAO2D,GAAS,IAAAlE,EAAA,OAAA2B,OAAAwC,EAAA,EAAAxC,CAAAkB,KAAAoB,IAC1BjE,EAAA2B,OAAAyC,EAAA,EAAAzC,CAAAkB,KAAAlB,OAAA0C,EAAA,EAAA1C,CAAAsC,GAAA3C,KAAAuB,KAAMtC,EAAO2D,KAQfI,YAAa,SAACC,GAAK,IACHC,EAAUD,EAAnBE,OAASD,MACdxE,EAAKwB,SAAS,CAACkD,IAAKF,KAXMxE,EAc5B2E,SAAW,SAACD,GACV1E,EAAKO,MAAMqE,YAAYC,UAAUH,GACjC1E,EAAKO,MAAMqE,YAAYE,SAASJ,IAhBN1E,EAmB5B+E,YAAa,SAACR,GACZ,IAAIG,EAAMH,EAAEE,OAAOD,OAASD,EAAEE,OAAOO,KACrChF,EAAK2E,SAASD,GACd1E,EAAKiF,eAAeP,GACpBH,EAAEW,kBAvBwBlF,EA0B5BmF,YAAc,SAACZ,GACbvE,EAAK2E,SAAS3E,EAAKJ,MAAM8E,KACzBH,EAAEW,kBA5BwBlF,EA+B5BiF,eAAiB,SAACG,GAChB,IACMC,EADUrF,EAAKO,MAAM+E,aACND,MAAQ,GAE1BA,GAAQA,EAAK3D,QACX0D,GAEDC,EAAKE,QAAQ,SAACC,EAAMC,GACfD,EAAKd,MAAQU,GAEZpF,EAAKwB,SAAS,CAACkE,cAAeD,OAzCdzF,EAsE5B2F,eAAgB,SAACpB,GAAM,IACPC,EAAUD,EAAnBE,OAASD,MACdxE,EAAKO,MAAMqF,cAAcC,aAAarB,IAtEtCxE,EAAKJ,MAAQ,CAAE8E,IAAKnE,EAAMuF,cAAcpB,MAAOgB,cAAe,GAFpC1F,yFAKF+C,GACxBF,KAAKrB,SAAS,CAAEkD,IAAK3B,EAAU+C,cAAcpB,oDA0C3B,IAAAqB,EAAAlD,KACZmD,EAAUnD,KAAKtC,MAAM+E,aACrBD,EAAOW,EAAQX,MAAQ,GAE7B,GAAGA,GAAQA,EAAK3D,OAAQ,CACtB,IAAIuE,EAAcpD,KAAKjD,MAAM8F,cACzBQ,EAAcF,EAAQ,oBACvBE,GAEDb,EAAKE,QAAQ,SAACC,EAAMC,GACfD,EAAKW,OAASD,IAEbH,EAAKvE,SAAS,CAACkE,cAAeD,IAC9BQ,EAAcR,KAKtB5C,KAAK8B,SAASU,EAAKY,GAAavB,uCAS3B,IAAA0B,EAC2CvD,KAAKtC,MAAjD8F,EADCD,EACDC,aAAcP,EADbM,EACaN,cAAeR,EAD5Bc,EAC4Bd,WAC7BgB,EAASD,EAAa,UACtBE,EAAOF,EAAa,QACpB7G,EAAU6G,EAAa,WAEzBG,EAA8C,YAAlCV,EAAcW,gBAG1BC,EAAa,GAFgC,WAAlCZ,EAAcW,kBAGhBC,EAAWC,MAAQ,OAC7BH,IAAWE,EAAWC,MAAQ,QAX1B,IAaCtB,EAASC,IAATD,KACJuB,EAAU,GACVC,EAAe,KAEnB,GAAGxB,EAAM,CACP,IAAIyB,EAAO,GACXzB,EAAKE,QAAQ,SAACwB,EAAMtB,GAClBqB,EAAKE,KAAK5D,EAAAC,EAAAC,cAAA,UAAQ2D,IAAKxB,EAAGjB,MAAOuC,EAAKrC,KAAMqC,EAAKZ,SAGnDS,EAAQI,KACN5D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAe2D,QAAQ,UAAS9D,EAAAC,EAAAC,cAAA,mCAC/CF,EAAAC,EAAAC,cAAA,UAAQS,GAAG,SAASoD,SAAUX,EAAWY,SAAWvE,KAAKkC,YAAcP,MAAOa,EAAKxC,KAAKjD,MAAM8F,eAAehB,KAC1GoC,UAMPD,EAAehE,KAAKsC,YACpByB,EAAQI,KAAK5D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBAAqB8D,KAAK,OAAOD,SAAWvE,KAAKyB,YAAcE,MAAO3B,KAAKjD,MAAM8E,IAAKyC,SAAUX,EAAWvD,MAAOyD,KAChJE,EAAQI,KAAK5D,EAAAC,EAAAC,cAACgD,EAAD,CAAQ/C,UAAU,sBAAsB+D,QAAUzE,KAAKsC,aAAvD,SAGf,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACiD,EAAD,CAAMhD,UAAU,uBACdH,EAAAC,EAAAC,cAAC9D,EAAD,CAASwD,KAAK,MAAML,MAAO,KAC3BS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,MAEFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBgE,SAAUV,GAC9CD,EAAQY,IAAI,SAACC,EAAIhC,GAAL,OAAWiC,uBAAaD,EAAI,CAAER,IAAKxB,OAElDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAlISoE,IAAMnE,WCKpCoE,6MAEJhI,MAAQ,CACNoD,KAAM,UAGR6E,YAAc,WACZ7H,EAAKwB,SAAS,CAAEwB,KAAM,SACtB8E,WAAW,WACT9H,EAAKO,MAAMwH,eAAeC,YAAW,GACrCF,WAAW,kBAAM9H,EAAKwB,SAAS,CAAEwB,KAAM,UAAU,IAChD,8EAGI,IAAAoD,EACmCvD,KAAKtC,MAAvC0H,EADD7B,EACC6B,iBAAkB5B,EADnBD,EACmBC,aACpB6B,EAAUD,EAAiBE,aAC3B3I,EAAU6G,EAAa,WAE7B,OAAI6B,EAIF9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,KAEAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,eAKRH,EAAAC,EAAAC,cAAA,OAAKgE,QAASzE,KAAKgF,YAAatE,UAAU,iBACxCH,EAAAC,EAAAC,cAAA,QAAOC,UAAU,QAAjB,OACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,KACAH,EAAAC,EAAAC,cAAC9D,EAAD,CAASwD,KAAOH,KAAKjD,MAAMoD,SArBxB,YApBkB2E,IAAMnE,iCCC/B6E,EAAKC,IAAU,CACnBC,QAAS,CAACC,ID8CG,WACb,MAAO,CACLC,aAAc,CACZC,QAAS,CACPR,SAAS,IAGbS,aAAc,CACZnD,KAAM,CACJoD,YAAa,CACX/D,UAAW,SAACgE,EAAKC,GAAN,OAAiB,SAACpE,GACjB,WAAPA,IACDA,EAAMoE,EAAOhD,cAAcpB,MAC3BoE,EAAOf,eAAeC,cAExBa,EAAInE,KAENI,SAAU,SAAC+D,EAAKC,GAAN,OAAiB,SAACpE,GAChB,WAAPA,GAGHmE,EAAInE,OAIVqE,OAAQ,CACNH,YAAa,CACXI,OAAQ,SAACH,EAAKC,GAAN,OAAiB,SAACG,GACxBJ,EAAII,GACJA,EAAIF,OAAOG,SAAS,yBAI1BR,QAAS,CACPS,QAAS,CACPnB,WADO,WAEL,MAAO,CACLX,KAAM,mBACN+B,UAHqBC,UAAA3H,OAAA,QAAA4H,IAAAD,UAAA,KAAAA,UAAA,OAO3BE,UAAW,CACTpB,WADS,SACEvI,GACT,OAAOA,EAAM4J,IAAI,aAGrBC,SAAS9H,OAAA+H,EAAA,EAAA/H,CAAA,GACN,mBADK,SACe/B,EAAO+J,GAC1B,OAAO/J,EAAMgK,IAAI,UAAWD,EAAOP,aAK3CS,WAAY,CACVC,QAASlC,EACTpI,QAASuK,EACTC,cAAeC,GAIjBC,eAAgB,CACdjG,OAAQ,SAACkG,GAAD,OAAS,SAAC5J,GAChB,IAAMyJ,EAAgBzJ,EAAM8F,aAAa,iBAAiB,GAC1D,OAAG9F,EAAM0H,iBAAiBE,aACjB/E,EAAAC,EAAAC,cAAC0G,EAAkBzJ,GACrB6C,EAAAC,EAAAC,cAAC6G,EAAQ5J,KAElB6J,WAAY,SAACD,GAAD,OAAS,SAAC5J,GACpB,IAAMuJ,EAAUvJ,EAAM8F,aAAa,WAAW,GAExCgE,GADU9J,EAAM8F,aAAa,WACZ9F,EAAM0H,iBAAiBE,cAC9C,OACE/E,EAAAC,EAAAC,cAAA,QAAMC,UAAW8G,EAAiB,WAAa,IAI7CjH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAC6G,EAAQ5J,UC3HnBmE,IAAK,8CACL4F,OAAQ,qBAGVC,OAAOlC,GAAKA,EAGZmC,IAAUC,KAAK,4CAA6C,WAC1DpC,EAAGN,eAAeC,eAGpB,IASe0C,EATHrC,EAAGhC,aAAa,MAAO,QCVfsE,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5H,EAAAC,EAAAC,cAAC2H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.81e2de66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AmazDooMLeft.c89f593b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/AmazDooMRight.8b6d3979.ttf\";","import React from 'react'\nimport { Component } from 'react'\nimport './doom-guy.scss'\n\nconst  IDLE_ANIMATION = [\n  {frameX: 1},\n  ,\n  ,\n  ,\n  {frameX: 0},\n  {frameX: 1},\n  ,\n  ,\n  ,\n  {frameX: 2},\n  {frameX: 1},\n]\n\nexport default class DoomGuy extends Component {\n\n  pos = {\n    left: 0,\n    step: 0,\n  };\n\n  static defaultProps = {\n    cellWidth: 108,\n    cellHeight: 136,\n    scale: 0.6,\n    size: 997,\n    mode: 'idle',\n    speed: 1000,\n  };\n\n  state = {\n    idleIndex: 0,\n    frameX: 1,\n    frameY: 0,\n  }\n\n  startIdle = () => {\n    this.stopIdle()\n    console.log('Start animating...')\n    this._cancel = this.requestInterval(this.onAnimate, this.props.speed)\n  }\n\n  stopIdle = () => {\n    if(this._cancel) {\n      console.log('Stop animating...')\n      this._cancel()\n      this._cancel = null\n    }\n  }\n\n  componentDidMount() {\n    this.changeMode(this.props)\n  }\n\n  componentDidUnMount() {\n    this.stopIdle()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.mode != this.props.mode) {\n      this.changeMode(nextProps)\n    }\n  }\n\n  changeMode(props) {\n    if(props.mode == 'idle') {\n      this.startIdle()\n    } else if (props.mode == 'god') {\n      this.setState({ frameX: 8, frameY: 0 })\n    } else if (props.mode == 'grin') {\n      this.setState({ frameX: 6, frameY: 0 })\n    }\n  }\n\n  setBgRef = ref => this.bgRef = ref\n\n  setContainerRef = ref => this.containerRef = ref\n\n  requestInterval = function (fn, delay) {\n    let start = new Date().getTime()\n    let instance\n    const loop = () => {\n      instance = requestAnimationFrame(loop);\n      let current = new Date().getTime()\n      let delta = current - start\n      if (delta >= delay) {\n        fn.call();\n        start = new Date().getTime();\n      }\n    }\n\n    instance = requestAnimationFrame(loop);\n\n    // Cancel it\n    return () => {\n      cancelAnimationFrame(instance)\n    }\n  }\n\n  onAnimate = () => {\n    this.setState(state => {\n      const idleObj = IDLE_ANIMATION[state.idleIndex]\n      const idleIndex = (state.idleIndex + 1 ) % IDLE_ANIMATION.length\n\n      return {\n        ...idleObj,\n        idleIndex,\n      }\n    })\n  }\n\n  getFrameStyle = () => {\n    const { frameX, frameY } = this.state\n    let x = -1 * (frameX * this.cellWidth())\n    let y = -1 * (frameY * this.cellHeight())\n\n    const [xPlus, yPlus] = this.specialDoomSpriteMagic(frameX, frameY)\n\n    x += xPlus\n    y += yPlus\n\n    return {\n      bgRef: {\n        backgroundPosition: `${x}px ${y}px`,\n        backgroundSize: this.props.scale * this.props.size,\n      }\n    }\n  }\n\n  specialDoomSpriteMagic(frameX, frameY) {\n    let x = 0\n    let y = 0\n\n    if(frameX == 3) {\n      x = -8 * this.props.scale\n      y = 2 * this.props.scale\n      if(frameY >= 4) {\n        x -= 10 * this.props.scale\n        y += 2 * this.props.scale\n      }\n    }\n\n    if(frameX >= 4) {\n      x = -16 * this.props.scale\n      y = 4 * this.props.scale\n      if(frameY >= 4) {\n        x -= 20 * this.props.scale\n        y += 4 * this.props.scale\n      }\n    }\n\n    return [x,y]\n  }\n\n  cellWidth = () => this.props.cellWidth * this.props.scale\n  cellHeight = () => this.props.cellHeight * this.props.scale\n\n  render() {\n    const style = {\n      width: this.cellWidth(),\n      height: this.cellHeight(),\n    }\n\n    const { bgRef } = this.getFrameStyle()\n\n    return (\n      <div ref={this.setContainerRef} className=\"doom-guy\" style={style}>\n        <div ref={this.setBgRef} style={bgRef} className=\"doom-guy-sprite\" />\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nconst SvgAssets = () =>\n  <div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" style={{\n        position: \"absolute\",\n        width: 0,\n        height: 0\n      }}>\n      <defs>\n        <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n          <path d=\"m 6.2098376,2.0638788 c -0.661849,0 -0.99279,0.165463 -0.99279,0.496389 0,0.273028 -0.223377,0.496401 -0.496396,0.496401 -0.273013,0 -0.4963949,0.223374 -0.4963949,0.496389 0,0.273029 -0.223377,0.496402 -0.496395,0.496402 -0.273013,0 -0.496396,0.22336 -0.496396,0.496389 0,0.273016 -0.223376,0.496401 -0.496395,0.496401 -0.422856,0 -0.496395,0.8824864 -0.496395,5.9567432 v 5.956742 H 9.1882096 16.137743 V 12.984573 9.013411 h -1.985581 c -1.544338,0 -1.985581,-0.110317 -1.985581,-0.4964012 0,-0.2730151 0.223381,-0.4963885 0.496395,-0.4963885 0.40446,0 0.496395,-0.5515477 0.496395,-2.9783715 v -2.978371 h -0.99279 -0.99279 v 2.978371 c 0,2.4268238 -0.09192,2.9783715 -0.496396,2.9783715 -0.40447,0 -0.496396,-0.5515477 -0.496396,-2.9783715 V 2.0638788 H 9.1882096 c -0.882471,0 -0.99279,0.110317 -0.99279,0.99279 0,0.661865 0.165459,0.992791 0.496394,0.992791 0.273019,0 0.496396,0.22336 0.496396,0.496389 0,0.273016 -0.223377,0.496401 -0.496396,0.496401 -0.273013,0 -0.496394,0.2233611 -0.496394,0.4963894 0,0.273016 -0.223377,0.4964018 -0.496396,0.4964018 -0.386082,0 -0.496395,-0.4412432 -0.496395,-1.9855812 V 2.0638788 Z M 4.0587917,8.2429559 H 5.7483466 V 9.932519 H 4.0587917 Z m 0,2.5802301 h 1.6895549 v 1.689551 H 4.0587917 Z m 0,2.580217 h 1.6895549 v 1.689552 H 4.0587917 Z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n          <path d=\"M 5.1879616,1.8260207 V 2.721865 c -0.06772,0.1937926 -0.251169,0.3348033 -0.467311,0.3348033 -0.273013,0 -0.496394,0.2233857 -0.496394,0.4964015 0,0.2730284 -0.223378,0.4963891 -0.496395,0.4963891 -0.273015,0 -0.4963953,0.2233732 -0.4963953,0.4964015 0,0.2730159 -0.2233782,0.4963891 -0.4963953,0.4963891 -0.4228568,0 -0.4963953,0.8824862 -0.4963953,5.9567415 v 5.956744 H 9.1882086 16.137743 V 12.984573 9.0134115 h -1.985582 c -0.225994,0 -0.382144,-0.00873 -0.562968,-0.013634 V 1.8259582 Z m -1.138222,6.415659 h 1.68891 V 9.931231 h -0.550688 v 0.00123 h -1.12917 v -0.00123 h -0.009 z m 0.009,2.5815053 h 1.689553 v 1.689564 h -1.689507 z m 0,2.58023 h 1.689553 v 1.689551 h -1.689507 z\"></path>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"close\">\n          <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n          <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n          <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n        </symbol>\n\n\n        <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n          <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n          <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n        </symbol>\n\n      </defs>\n    </svg>\n  </div>\n\nexport default SvgAssets\n","import React, { cloneElement } from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class Topbar extends React.Component {\n\n  static propTypes = {\n    layoutActions: PropTypes.object.isRequired\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = { url: props.specSelectors.url(), selectedIndex: 0 }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ url: nextProps.specSelectors.url() })\n  }\n\n  onUrlChange =(e)=> {\n    let {target: {value}} = e\n    this.setState({url: value})\n  }\n\n  loadSpec = (url) => {\n    this.props.specActions.updateUrl(url)\n    this.props.specActions.download(url)\n  }\n\n  onUrlSelect =(e)=> {\n    let url = e.target.value || e.target.href\n    this.loadSpec(url)\n    this.setSelectedUrl(url)\n    e.preventDefault()\n  }\n\n  downloadUrl = (e) => {\n    this.loadSpec(this.state.url)\n    e.preventDefault()\n  }\n\n  setSelectedUrl = (selectedUrl) => {\n    const configs = this.props.getConfigs()\n    const urls = configs.urls || []\n\n    if(urls && urls.length) {\n      if(selectedUrl)\n      {\n        urls.forEach((spec, i) => {\n          if(spec.url === selectedUrl)\n            {\n              this.setState({selectedIndex: i})\n            }\n        })\n      }\n    }\n  }\n\n  componentDidMount() {\n    const configs = this.props.getConfigs()\n    const urls = configs.urls || []\n\n    if(urls && urls.length) {\n      var targetIndex = this.state.selectedIndex\n      let primaryName = configs[\"urls.primaryName\"]\n      if(primaryName)\n      {\n        urls.forEach((spec, i) => {\n          if(spec.name === primaryName)\n            {\n              this.setState({selectedIndex: i})\n              targetIndex = i\n            }\n        })\n      }\n\n      this.loadSpec(urls[targetIndex].url)\n    }\n  }\n\n  onFilterChange =(e) => {\n    let {target: {value}} = e\n    this.props.layoutActions.updateFilter(value)\n  }\n\n  render() {\n    let { getComponent, specSelectors, getConfigs } = this.props\n    const Button = getComponent(\"Button\")\n    const Link = getComponent(\"Link\")\n    const DoomGuy = getComponent(\"DoomGuy\")\n\n    let isLoading = specSelectors.loadingStatus() === \"loading\"\n    let isFailed = specSelectors.loadingStatus() === \"failed\"\n\n    let inputStyle = {}\n    if(isFailed) inputStyle.color = \"red\"\n    if(isLoading) inputStyle.color = \"#aaa\"\n\n    const { urls } = getConfigs()\n    let control = []\n    let formOnSubmit = null\n\n    if(urls) {\n      let rows = []\n      urls.forEach((link, i) => {\n        rows.push(<option key={i} value={link.url}>{link.name}</option>)\n      })\n\n      control.push(\n        <label className=\"select-label\" htmlFor=\"select\"><span>Select a definition</span>\n          <select id=\"select\" disabled={isLoading} onChange={ this.onUrlSelect } value={urls[this.state.selectedIndex].url}>\n            {rows}\n          </select>\n        </label>\n      )\n    }\n    else {\n      formOnSubmit = this.downloadUrl\n      control.push(<input className=\"download-url-input\" type=\"text\" onChange={ this.onUrlChange } value={this.state.url} disabled={isLoading} style={inputStyle} />)\n      control.push(<Button className=\"download-url-button\" onClick={ this.downloadUrl }>Grab</Button>)\n    }\n\n    return (\n      <div className=\"topbar topbar-ronmode\">\n        <div className=\"wrapper\">\n          <div className=\"topbar-wrapper\">\n            <Link className=\"topbar-ronmode-text\">\n              <DoomGuy mode=\"god\" scale={0.4} />\n              <span className=\"doom\">RonMod</span>\n              <span className=\"doom doom-right\">E</span>\n            </Link>\n            <form className=\"download-url-wrapper\" onSubmit={formOnSubmit}>\n              {control.map((el, i) => cloneElement(el, { key: i }))}\n            </form>\n            <div className=\"topbar-spacer\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nTopbar.propTypes = {\n  specSelectors: PropTypes.object.isRequired,\n  specActions: PropTypes.object.isRequired,\n  getComponent: PropTypes.func.isRequired,\n  getConfigs: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport \"./style.scss\"\nimport './fonts/AmazDooMLeft.ttf'\nimport './fonts/AmazDooMRight.ttf'\nimport DoomGuyComponent from './doom-guy'\nimport SvgAssets from './svg-assets.jsx'\nimport TopBarComponent from \"./topbar\"\n\nclass RonModeComponent extends React.Component {\n\n  state = {\n    mode: 'idle',\n  }\n\n  exitRonMode = () => {\n    this.setState({ mode: 'grin'})\n    setTimeout(() => {\n      this.props.ronModeActions.setEnabled(false)\n      setTimeout(() => this.setState({ mode: 'idle'}), 0)\n    }, 300)\n  }\n\n  render() {\n    const { ronModeSelectors, getComponent} = this.props\n    const enabled = ronModeSelectors.getEnabled()\n    const DoomGuy = getComponent('DoomGuy')\n\n    if(!enabled)\n      return null\n\n    return (\n      <div className=\"ron-mode-indicator\">\n        <SvgAssets/>\n        <div className=\"ron-mode-indicator-wrapper fadeOutDownBig animated\">\n          <div className=\"block\">\n            <div className=\"block-floating\">\n              <span className=\"ron-mode-enabled\">\n                <span className=\"doom\">RonMod</span>\n                <span className=\"doom doom-right\">E</span>\n                {/* <DoomGuy mode=\"god\" scale={0.8}/> */}\n                <hr/>\n                <b className=\"enabled\">ENABLED</b>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div onClick={this.exitRonMode} className='exit-ron-mode'>\n          <span  className=\"doom\">Exi</span>\n          <span className=\"doom doom-right\">T</span>\n          <DoomGuy mode={ this.state.mode }/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default function RonMode() {\n  return {\n    initialState: {\n      ronMode: {\n        enabled: true\n      }\n    },\n    statePlugins: {\n      spec: {\n        wrapActions: {\n          updateUrl: (ori, system) => (url) => {\n            if(url == 'ronmode') {\n              url = system.specSelectors.url()\n              system.ronModeActions.setEnabled()\n            }\n            ori(url)\n          },\n          download: (ori, system) => (url) => {\n            if(url == 'ronmode') {\n              return\n            }\n            ori(url)\n          }\n        }\n      },\n      editor: {\n        wrapActions: {\n          onLoad: (ori, system) => (obj) => {\n            ori(obj)\n            obj.editor.setTheme('ace/theme/monokai')\n          }\n        }\n      },\n      ronMode: {\n        actions: {\n          setEnabled(enabled=true) {\n            return {\n              type: \"ron_mode_enabled\",\n              payload: !!enabled\n            }\n          }\n        },\n        selectors: {\n          getEnabled(state) {\n            return state.get('enabled')\n          }\n        },\n        reducers: {\n          ['ron_mode_enabled'](state, action) {\n            return state.set('enabled', action.payload)\n          }\n        }\n      }\n    },\n    components: {\n      RonMode: RonModeComponent,\n      DoomGuy: DoomGuyComponent,\n      TopbarRonMode: TopBarComponent,\n      // SvgAssets,\n    },\n\n    wrapComponents: {\n      Topbar: (Ori) => (props) => {\n        const TopbarRonMode = props.getComponent(\"TopbarRonMode\", true)\n        if(props.ronModeSelectors.getEnabled())\n          return <TopbarRonMode {...props} />\n        return <Ori {...props}/>\n      },\n      BaseLayout: (Ori) => (props) => {\n        const RonMode = props.getComponent(\"RonMode\", true)\n        const DoomGuy = props.getComponent(\"DoomGuy\")\n        const ronModeEnabled = props.ronModeSelectors.getEnabled()\n        return (\n          <span className={ronModeEnabled ? 'ron-mode' : ''}>\n            {/* { ronModeEnabled ? null : ( */}\n            {/*   <button onClick={() => props.ronModeActions.setEnabled(true)}>Enable</button> */}\n            {/* )} */}\n            <RonMode />\n            <Ori {...props}/>\n          </span>\n        )\n      }\n    }\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport SwaggerUI from 'swagger-ui'\nimport SwaggerUIStandalone from 'swagger-ui/dist/swagger-ui-standalone-preset'\nimport 'swagger-ui/dist/swagger-ui.css'\nimport RonMode from './ron-mode'\nimport Mousetrap from 'mousetrap'\n\nconst ui = SwaggerUI({\n  plugins: [SwaggerUIStandalone, RonMode],\n  url: \"https://petstore.swagger.io/v2/swagger.json\",\n  layout: 'StandaloneLayout',\n})\n\nwindow.ui = ui\n\n\nMousetrap.bind('up up down down left right left right b a', function() {\n  ui.ronModeActions.setEnabled()\n})\n\nconst App = ui.getComponent('App', 'root')\n\n// function App() {\n\n//   return (\n//     <SwaggerUIRoot />\n//   )\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}